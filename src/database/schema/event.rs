//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use super::sea_orm_active_enums::EventType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "event")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user_id: i64,
    pub event_type: EventType,
    pub date: Option<DateTimeWithTimeZone>,
    #[sea_orm(column_type = "Text", nullable)]
    pub message_text: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub result_id: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub query: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub callback_data: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub lemma_sent: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
